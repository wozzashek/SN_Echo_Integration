<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1ac23ecadb5db200d1a9f1351d9619ef</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;record_update table="x_snc_amazon_echo_intent"&gt;
    &lt;x_snc_amazon_echo_intent action="INSERT_OR_UPDATE"&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;always_available&gt;false&lt;/always_available&gt;
        &lt;category/&gt;
        &lt;fallback&gt;false&lt;/fallback&gt;
        &lt;intent_ends_session&gt;false&lt;/intent_ends_session&gt;
        &lt;keyword&gt;MyRequests&lt;/keyword&gt;
        &lt;name&gt;My Requests&lt;/name&gt;
        &lt;next_intent/&gt;
        &lt;order&gt;200&lt;/order&gt;
        &lt;output_speech_format/&gt;
        &lt;reprompt_speech_format/&gt;
        &lt;script&gt;&lt;![CDATA[(function(content, attributes, erb){
	var introMessage = 'Here is a list of your open Service Requests: ';
	var outroMessage = '';
	var msg = '';
	var hasRITMs = false;
	
	var usr = 'f7c7610d13b69200d0143d622244b053'; //For demo purposes
	
	var ritm = new GlideRecord('sc_req_item');
	ritm.addQuery('opened_by', usr);
	ritm.query();
	
	while (ritm.next()){
		var updatedArr = ritm.due_date.getDisplayValue().split(" ");
		var updatedDate = updatedArr[0];
		var updatedTime = updatedArr[1].split(":");
		updatedTime = updatedTime[0] + ":" + updatedTime[1];
		
		var num = ritm.number.toString();
		var numS = num.slice(-7);
		
		introMessage += "Request &lt;say-as interpret-as='spell-out'&gt;" + "RITM" + "&lt;/say-as&gt; &lt;say-as interpret-as='digits'&gt;" + numS + "&lt;/say-as&gt; for a " +  ritm.cat_item.getDisplayValue() +  " is in the status of: " + ritm.stage + ". ";
		introMessage += "The requested due date is: " + updatedDate + " at " + updatedTime + ". ";
		hasRITMs = true;
	}
	
	if (!hasRITMs)
		introMessage = "You have no open Service Requests. ";
	
	outroMessage += "To hear the list of requests again, say 'hear requests'. To go back to the status for today, say 'What's happening today'.";
	msg = "&lt;speak&gt;" + introMessage + outroMessage + "&lt;/speak&gt;";
	
	erb.setOutputSpeech("SSML", null, msg);
	erb.setEnd(false);
	
	result = erb.getResponse();
	
})(content, attributes, new EchoResponseBuilder());]]&gt;&lt;/script&gt;
        &lt;slot_name_1/&gt;
        &lt;slot_name_2/&gt;
        &lt;slot_name_3/&gt;
        &lt;slot_type_1/&gt;
        &lt;slot_type_2/&gt;
        &lt;slot_type_3/&gt;
        &lt;sys_created_by&gt;jc&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-03-06 03:30:10&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1ac23ecadb5db200d1a9f1351d9619ef&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;
        &lt;sys_updated_by&gt;jc&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-04-18 16:14:19&lt;/sys_updated_on&gt;
        &lt;top_level_intent&gt;true&lt;/top_level_intent&gt;
    &lt;/x_snc_amazon_echo_intent&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>jc</sys_created_by>
        <sys_created_on>2017-05-13 01:47:39</sys_created_on>
        <sys_id>bb67ec00db72f60015f2de01ce961984</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>My Requests</sys_name>
        <sys_package display_value="Amazon Echo" source="x_snc_amazon_echo">101eb7da13a21200d0143d622244b063</sys_package>
        <sys_policy/>
        <sys_scope display_value="Amazon Echo">101eb7da13a21200d0143d622244b063</sys_scope>
        <sys_update_name>sys_metadata_link_bb67ec00db72f60015f2de01ce961984</sys_update_name>
        <sys_updated_by>jc</sys_updated_by>
        <sys_updated_on>2017-05-13 01:47:39</sys_updated_on>
        <tablename>x_snc_amazon_echo_intent</tablename>
    </sys_metadata_link>
</record_update>
