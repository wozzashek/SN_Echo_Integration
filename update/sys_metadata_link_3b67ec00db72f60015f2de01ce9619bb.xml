<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>5b25fe0edb5db200d1a9f1351d961930</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;record_update table="x_snc_amazon_echo_intent"&gt;
    &lt;x_snc_amazon_echo_intent action="INSERT_OR_UPDATE"&gt;
        &lt;active&gt;false&lt;/active&gt;
        &lt;always_available&gt;false&lt;/always_available&gt;
        &lt;category/&gt;
        &lt;fallback&gt;false&lt;/fallback&gt;
        &lt;intent_ends_session&gt;false&lt;/intent_ends_session&gt;
        &lt;keyword&gt;CheckStatusInc&lt;/keyword&gt;
        &lt;name&gt;Check Status (Step 2)&lt;/name&gt;
        &lt;next_intent/&gt;
        &lt;order/&gt;
        &lt;output_speech_format/&gt;
        &lt;reprompt_speech_format/&gt;
        &lt;script&gt;&lt;![CDATA[(function(content, attributes, erb){
	var num = "INC" + content.Number.value;
	
	var inc = new GlideRecord('incident');
	if (inc.get('number', num)){
		var updatedArr = inc.sys_updated_on.getDisplayValue().split(" ");
		var updatedDate = updatedArr[0];
		var updatedTime = updatedArr[1].split(":");
		updatedTime = updatedTime[0] + ":" + updatedTime[1];
		
		var notes = inc.comments.getJournalEntry(-1);
		var na = notes.split("\n\n");
		notes = na[0];
		
		//Message output...
		msg = "&lt;speak&gt;";
		msg += "The current status of your incident is: " + inc.state.getDisplayValue() + ". ";
		msg += "Your incident was last updated on: " + updatedDate + " at " + updatedTime  + ". ";
		
		if (notes != "" &amp;&amp; notes != null) {
			notes = notes.split("\n");
			msg += "The last update was: " + notes[1] + ".";
		}
		
		msg += "&lt;/speak&gt;";
		erb.setOutputSpeech("SSML", "", msg);
		//End message output
	} else {
		erb.setReprompt("PlainText", "I was unable to find that Incident. What was that Incident number again?");
	}
	erb.setEnd(true);
	
	result = erb.response;
})(content, attributes, new EchoResponseBuilder());]]&gt;&lt;/script&gt;
        &lt;slot_name_1&gt;Number&lt;/slot_name_1&gt;
        &lt;slot_name_2/&gt;
        &lt;slot_name_3/&gt;
        &lt;slot_type_1 display_value="AMAZON.NUMBER"&gt;d170c646dbd9b200d1a9f1351d9619a4&lt;/slot_type_1&gt;
        &lt;slot_type_2/&gt;
        &lt;slot_type_3/&gt;
        &lt;sys_created_by&gt;jc&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-03-06 03:40:36&lt;/sys_created_on&gt;
        &lt;sys_id&gt;5b25fe0edb5db200d1a9f1351d961930&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;4&lt;/sys_mod_count&gt;
        &lt;sys_updated_by&gt;jc&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-04-13 02:03:50&lt;/sys_updated_on&gt;
        &lt;top_level_intent&gt;false&lt;/top_level_intent&gt;
    &lt;/x_snc_amazon_echo_intent&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>jc</sys_created_by>
        <sys_created_on>2017-05-13 01:47:39</sys_created_on>
        <sys_id>3b67ec00db72f60015f2de01ce9619bb</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check Status (Step 2)</sys_name>
        <sys_package display_value="Amazon Echo" source="x_snc_amazon_echo">101eb7da13a21200d0143d622244b063</sys_package>
        <sys_policy/>
        <sys_scope display_value="Amazon Echo">101eb7da13a21200d0143d622244b063</sys_scope>
        <sys_update_name>sys_metadata_link_3b67ec00db72f60015f2de01ce9619bb</sys_update_name>
        <sys_updated_by>jc</sys_updated_by>
        <sys_updated_on>2017-05-13 01:47:39</sys_updated_on>
        <tablename>x_snc_amazon_echo_intent</tablename>
    </sys_metadata_link>
</record_update>
