<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>1dad2617db4ef60015f2de01ce961969</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;record_update table="x_snc_amazon_echo_intent"&gt;
    &lt;x_snc_amazon_echo_intent action="INSERT_OR_UPDATE"&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;always_available&gt;false&lt;/always_available&gt;
        &lt;category/&gt;
        &lt;fallback&gt;false&lt;/fallback&gt;
        &lt;intent_ends_session&gt;false&lt;/intent_ends_session&gt;
        &lt;keyword&gt;PortfolioStatus&lt;/keyword&gt;
        &lt;name&gt;What's the status of my IT Operations Portfolio?&lt;/name&gt;
        &lt;next_intent/&gt;
        &lt;order&gt;600&lt;/order&gt;
        &lt;output_speech_format&gt;SSML&lt;/output_speech_format&gt;
        &lt;reprompt_speech_format/&gt;
        &lt;script&gt;&lt;![CDATA[(function(current, content, attributes, ER, IntentUtils){
	var msg = "&lt;speak&gt;";

	var p = new GlideRecord('pm_portfolio');
	if (!p.get('name', 'IT Operations'))
		msg += "Unable to find a portfolio called IT Operations. ";
	else {
		msg += "Here is the status of the IT Operations Portfolio, managed by" + p.portfolio_manager.getDisplayValue() + ", for Fiscal Year 17. "; 

		/***** Demands *****/
		var demand = new GlideAggregate('dmn_demand');
		demand.addEncodedQuery('portfolio=f9325e53933012003b4bb095e57ffb31^start_dateONThis year@javascript:gs.beginningOfThisYear()@javascript:gs.endOfThisYear()');
		demand.addAggregate('COUNT');
		demand.query();

		if (demand.next()){
			var cnt = demand.getAggregate('COUNT');
			msg += "There " + (cnt == 1 ? 'is ' : 'are ') + cnt + ' open Demands in the portfolio back-log. ';
		}

		/***** Projects *****/
		var project = new GlideAggregate('pm_m2m_portfolio_project');
		project.addAggregate('COUNT');
		project.addEncodedQuery('portfolio=f9325e53933012003b4bb095e57ffb31^project.pm_project.start_dateONThis year@javascript:gs.beginningOfThisYear()@javascript:gs.endOfThisYear()');
		project.query();

		if (project.next()){
			var prjCount = project.getAggregate('COUNT');
			msg += "There " + (prjCount == 1 ? 'is ' : 'are ') + prjCount + ' active Projects that have started this year. ';
		}

		/***** Portfolio Cost Defaults *****/
		var totalPortfolioTarget = 0;
		var totalPortfolioPlanned = 0;
		var totalPortfolioActuals = 2100000;

		/***** Portfolio Target Cost *****/ 
		var portfolioTarget = new GlideRecord('project_funding');
		portfolioTarget.addEncodedQuery('portfolio=f9325e53933012003b4bb095e57ffb31^programISEMPTY^taskISEMPTY^fiscal_period.nameLIKEFY17');
		portfolioTarget.query();

		if (portfolioTarget.next())
			totalPortfolioTarget = portfolioTarget.target;

		/***** Portfolio Planned Cost *****/
		var fundings = [];

		var funding = new GlideRecord('project_funding');
		funding.addEncodedQuery('portfolio=f9325e53933012003b4bb095e57ffb31^fiscal_period=795985d4133002003ff3691c2c6a5e6f^planned=true');
		funding.query();

		while (funding.next())
			fundings.push(funding.task.sys_id.toString());

		var costPlan = new GlideAggregate('cost_plan');
		costPlan.addQuery('portfolio', 'f9325e53933012003b4bb095e57ffb31');
		costPlan.addQuery('task', 'IN', fundings);
		costPlan.addAggregate('SUM', 'cost_local_currency');
		costPlan.setGroup(false);
		costPlan.query();
		if (costPlan.next()) 
			totalPortfolioPlanned = costPlan.getAggregate('SUM', 'cost_local_currency');
		
		/***** Portfolio Actual Cost *****/
		
		
		msg += "The portfolio target budget is $" + totalPortfolioTarget + ". ";
		msg += "The total planned cost for this portfolio is $" + totalPortfolioPlanned + ". ";
		msg += "The actual cost as of today for this portfolio is $" + totalPortfolioActuals + ". "
		msg += "This portfolio is at " + ((totalPortfolioActuals/totalPortfolioTarget)*100) + "% of the budget and presents a financial risk. Reach out to the portfolio manager " + p.portfolio_manager.getDisplayValue() + " for a more detailed cost analysis.";
	}

	msg += "&lt;/speak&gt;";
	
	ER.setOutputSpeech(current.output_speech_format, "", msg);
	ER.setEnd(current.intent_ends_session);
	
	result = ER.response; //Required
})(current, content, attributes, new EchoResponseBuilder(), new IntentUtils());]]&gt;&lt;/script&gt;
        &lt;slot_name_1&gt;Portfolio&lt;/slot_name_1&gt;
        &lt;slot_name_2/&gt;
        &lt;slot_name_3/&gt;
        &lt;slot_type_1 display_value="AMAZON.LITERAL"&gt;d480c646dbd9b200d1a9f1351d9619a6&lt;/slot_type_1&gt;
        &lt;slot_type_2/&gt;
        &lt;slot_type_3/&gt;
        &lt;sys_created_by&gt;jc&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-04-16 07:07:32&lt;/sys_created_on&gt;
        &lt;sys_id&gt;1dad2617db4ef60015f2de01ce961969&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;26&lt;/sys_mod_count&gt;
        &lt;sys_updated_by&gt;jc&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-04-18 16:16:55&lt;/sys_updated_on&gt;
        &lt;top_level_intent&gt;true&lt;/top_level_intent&gt;
    &lt;/x_snc_amazon_echo_intent&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>jc</sys_created_by>
        <sys_created_on>2017-05-13 01:47:31</sys_created_on>
        <sys_id>3967e400db72f60015f2de01ce9619e2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>What's the status of my IT Operations Portfolio?</sys_name>
        <sys_package display_value="Amazon Echo" source="x_snc_amazon_echo">101eb7da13a21200d0143d622244b063</sys_package>
        <sys_policy/>
        <sys_scope display_value="Amazon Echo">101eb7da13a21200d0143d622244b063</sys_scope>
        <sys_update_name>sys_metadata_link_3967e400db72f60015f2de01ce9619e2</sys_update_name>
        <sys_updated_by>jc</sys_updated_by>
        <sys_updated_on>2017-05-13 01:47:31</sys_updated_on>
        <tablename>x_snc_amazon_echo_intent</tablename>
    </sys_metadata_link>
</record_update>
